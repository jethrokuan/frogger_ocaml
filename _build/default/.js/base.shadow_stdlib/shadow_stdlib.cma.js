(function(joo_global_object)
   {"use strict";
    var
     runtime=joo_global_object.jsoo_runtime,
     global_data=runtime.caml_get_global_data(),
     Caml=global_data.Caml,
     Pervasives=Caml[1],
     invalid_arg=Caml[2],
     failwith=Caml[3],
     Exit=Caml[4],
     min=Caml[5],
     max=Caml[6],
     abs=Caml[7],
     max_int=Caml[8],
     min_int=Caml[9],
     lnot=Caml[10],
     infinity=Caml[11],
     neg_infinity=Caml[12],
     nan=Caml[13],
     max_float=Caml[14],
     min_float=Caml[15],
     epsilon_float=Caml[16],
     char_of_int=Caml[18],
     string_of_bool=Caml[19],
     bool_of_string=Caml[20],
     bool_of_string_opt=Caml[21],
     string_of_int=Caml[22],
     int_of_string_opt=Caml[23],
     string_of_float=Caml[24],
     float_of_string_opt=Caml[25],
     stdin=Caml[27],
     stdout=Caml[28],
     stderr=Caml[29],
     print_char=Caml[30],
     print_string=Caml[31],
     print_bytes=Caml[32],
     print_int=Caml[33],
     print_float=Caml[34],
     print_endline=Caml[35],
     print_newline=Caml[36],
     prerr_char=Caml[37],
     prerr_string=Caml[38],
     prerr_bytes=Caml[39],
     prerr_int=Caml[40],
     prerr_float=Caml[41],
     prerr_endline=Caml[42],
     prerr_newline=Caml[43],
     read_line=Caml[44],
     read_int=Caml[45],
     read_int_opt=Caml[46],
     read_float=Caml[47],
     read_float_opt=Caml[48],
     open_out=Caml[49],
     open_out_bin=Caml[50],
     open_out_gen=Caml[51],
     flush=Caml[52],
     flush_all=Caml[53],
     output_char=Caml[54],
     output_string=Caml[55],
     output_bytes=Caml[56],
     output=Caml[57],
     output_substring=Caml[58],
     output_byte=Caml[59],
     output_binary_int=Caml[60],
     output_value=Caml[61],
     seek_out=Caml[62],
     pos_out=Caml[63],
     out_channel_length=Caml[64],
     close_out=Caml[65],
     close_out_noerr=Caml[66],
     set_binary_mode_out=Caml[67],
     open_in=Caml[68],
     open_in_bin=Caml[69],
     open_in_gen=Caml[70],
     input_char=Caml[71],
     input_line=Caml[72],
     input=Caml[73],
     really_input=Caml[74],
     really_input_string=Caml[75],
     input_byte=Caml[76],
     input_binary_int=Caml[77],
     input_value=Caml[78],
     seek_in=Caml[79],
     pos_in=Caml[80],
     in_channel_length=Caml[81],
     close_in=Caml[82],
     close_in_noerr=Caml[83],
     set_binary_mode_in=Caml[84],
     LargeFile=Caml[85],
     string_of_format=Caml[86],
     exit=Caml[88],
     at_exit=Caml[89],
     valid_float_lexem=Caml[90],
     unsafe_really_input=Caml[91],
     do_at_exit=Caml[92],
     Arg=Caml[93],
     Array=Caml[94],
     ArrayLabels=Caml[95],
     Buffer=Caml[97],
     Bytes=Caml[98],
     BytesLabels=Caml[99],
     Callback=Caml[100],
     Char=Caml[101],
     Complex=Caml[102],
     Digest=Caml[103],
     Ephemeron=Caml[104],
     Filename=Caml[105],
     Float=Caml[106],
     Format=Caml[107],
     Gc=Caml[108],
     Genlex=Caml[109],
     Hashtbl=Caml[110],
     Int32=Caml[111],
     Int64=Caml[112],
     Lazy=Caml[113],
     Lexing=Caml[114],
     List=Caml[115],
     ListLabels=Caml[116],
     Map=Caml[117],
     Marshal=Caml[118],
     MoreLabels=Caml[119],
     Nativeint=Caml[120],
     Obj=Caml[121],
     Oo=Caml[122],
     Parsing=Caml[123],
     Printexc=Caml[124],
     Printf=Caml[125],
     Queue=Caml[126],
     Random=Caml[127],
     Scanf=Caml[128],
     Seq=Caml[129],
     Set=Caml[130],
     Sort=Caml[131],
     Spacetime=Caml[132],
     Stack=Caml[133],
     StdLabels=Caml[134],
     Stream=Caml[135],
     String=Caml[136],
     StringLabels=Caml[137],
     Sys=Caml[138],
     Uchar=Caml[139],
     Weak=Caml[140],
     Not_found=Caml[141],
     Shadow_stdlib=
      [0,
       Pervasives,
       invalid_arg,
       failwith,
       Exit,
       min,
       max,
       abs,
       max_int,
       min_int,
       lnot,
       infinity,
       neg_infinity,
       nan,
       max_float,
       min_float,
       epsilon_float,
       Caml[17],
       char_of_int,
       string_of_bool,
       bool_of_string,
       bool_of_string_opt,
       string_of_int,
       int_of_string_opt,
       string_of_float,
       float_of_string_opt,
       Caml[26],
       stdin,
       stdout,
       stderr,
       print_char,
       print_string,
       print_bytes,
       print_int,
       print_float,
       print_endline,
       print_newline,
       prerr_char,
       prerr_string,
       prerr_bytes,
       prerr_int,
       prerr_float,
       prerr_endline,
       prerr_newline,
       read_line,
       read_int,
       read_int_opt,
       read_float,
       read_float_opt,
       open_out,
       open_out_bin,
       open_out_gen,
       flush,
       flush_all,
       output_char,
       output_string,
       output_bytes,
       output,
       output_substring,
       output_byte,
       output_binary_int,
       output_value,
       seek_out,
       pos_out,
       out_channel_length,
       close_out,
       close_out_noerr,
       set_binary_mode_out,
       open_in,
       open_in_bin,
       open_in_gen,
       input_char,
       input_line,
       input,
       really_input,
       really_input_string,
       input_byte,
       input_binary_int,
       input_value,
       seek_in,
       pos_in,
       in_channel_length,
       close_in,
       close_in_noerr,
       set_binary_mode_in,
       LargeFile,
       string_of_format,
       Caml[87],
       exit,
       at_exit,
       valid_float_lexem,
       unsafe_really_input,
       do_at_exit,
       Arg,
       Array,
       ArrayLabels,
       Buffer,
       Bytes,
       BytesLabels,
       Callback,
       Char,
       Complex,
       Digest,
       Ephemeron,
       Filename,
       Float,
       Format,
       Gc,
       Genlex,
       Hashtbl,
       Int32,
       Int64,
       Lazy,
       Lexing,
       List,
       ListLabels,
       Map,
       Marshal,
       MoreLabels,
       Nativeint,
       Obj,
       Oo,
       Parsing,
       Printexc,
       Printf,
       Queue,
       Random,
       Scanf,
       Seq,
       Set,
       Sort,
       Spacetime,
       Stack,
       StdLabels,
       Stream,
       String,
       StringLabels,
       Sys,
       Uchar,
       Weak,
       Not_found];
    runtime.caml_register_global(1,Shadow_stdlib,"Shadow_stdlib");
    return}
  (function(){return this}()));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLjAsImZpbGUiOiJzaGFkb3dfc3RkbGliLmNtYS5qcyIsInNvdXJjZVJvb3QiOiIiLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O1UiLCJzb3VyY2VzIjpbXSwic291cmNlc0NvbnRlbnQiOltdfQ==
